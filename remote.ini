;----------------------
;| Autobanhamma Words |
;----------------------
on $*:text:/(v[-\s]*i[-\s]*n[-\s]*e[-\s]*4[-\s]*y[-\s]*o[-\s]*u|v[-\s]*i[-\s]*n[-\s]*e[-\s]*4[-\s]*o[-\s]*u|Trikkyvids|-O-6coFFGmE|nrjs0sKZDkc)/iS:#:{
  /msg # .ban $nick
  /msg # Another bot got the Thor's autobanhamma!
}

;--------------
;| Eastereggs |
;--------------
on $*:text:/(what does|whats) the fox say/iS:#:{
  msg # Ring-ding-ding-ding-dingeringeding!
}
on $*:text:/chicken/iS:#: {
  if (%floodchkn) { return }
  set -u60 %floodchkn On
  /msg # BACKAW!
}
on $*:text:/ninjas!/iS:#: {
  if (%floodninja) { return }
  set -u60 %floodninja On
  /msg # http://sm.jcink.com/images/gifs/ninjas.gif
}

on $*:text:/do you expect me to talk?/iS:#: {
  if (%floodtalk) { return }
  set -u60 %floodtalk On
  /msg # No $nick $+ , I expect you to die!
}
on $*:text:/go ninja/iS:#: {
  if (%floodgoninja) { return }
  set -u60 %floodgoninja On
  /msg # GO NINJA GO NINJA GO!
}
on $*:text:/leer(o+)y/iS:#: {
  if (%floodleeroy) { return }
  set -u60 %floodleeroy On
  /msg # JEENNNKKKIIINNNSSS!
}
;----------------------------------------------------------------------------------------------------------------------------------

on *:text:!*:#: {
  if ($1 == !btag) {
    if ($2 == add) {
      $replace ($3-, #, $chr(32))
      ;/msg # $1 $2 $3 $4 $5 $6
      if ($0 < 5) { msg # Insufficient parameters: Use "!btag add <btag name> <4 dig number> <main sever>" NOTE: please use a space instead of '#'. You do not need the '<' or '>' | return }
      writeini -n btag.ini $+(#,.,$nick) bTag $3
      writeini -n btag.ini $+(#,.,$nick) bTagSvr $5
      writeini -n btag.ini $+(#,.,$nick) bTagNum $4
      /msg $chan Added $nick $+ 's BattleTag as $3 $+ $chr(35) $+ $4 on $5 server.
    }
    elseif ($2 == addother) {
      if ($0 < 6) { msg # Insufficient parameters: Use !btag addother <twitch name> <btag name> <4 dig number> <main sever> | return }
      writeini -n btag.ini $+(#,.,$$3) bTag $4
      writeini -n btag.ini $+(#,.,$3) bTagSvr $6
      writeini -n btag.ini $+(#,.,$3) bTagNum $5
      /msg $chan Added $3 $+ 's BattleTag as $4 $+ $chr(35) $+ $5 on $6 server.
    }
    elseif ($2 == lookup) {
      if ($0 < 3) { msg # Insufficient parameters: Use !btag lookup <twitch name> | return }
      var %get $+(#,.,$3)
      var %bTag $readini(btag.ini,%get,bTag)
      var %bTagSvr $readini(btag.ini,%get,bTagSvr)
      var %bTagNum $readini(btag.ini,%get,bTagNum)
      if ($3 == ninjab0t || $3 == ninjabot) {
        msg # Silly human, I am a bot for this channel. I do not play games. Therefore, it is useless for me to have a BattleTag.
      }
      elseif (!%bTag) { 
        msg # We have no BattleTag recorded for $3
      }
      else {
        msg # $3 $+ 's BattleTag is %bTag $+ $chr(35) $+ %bTagNum on %bTagSvr
      }
    }
    else {
      var %get $+(#,.,$nick)
      var %bTag $readini(btag.ini,%get,bTag)
      var %bTagSvr $readini(btag.ini,%get,bTagSvr)
      var %bTagNum $readini(btag.ini,%get,bTagNum)
      if (!%bTag) { 
        msg # $nick $+ , we have no BattleTag logged for you. Please use the command "!btag add <battletag> <4 dig number> <main server>" to add your tag.
      }
      else {
        msg # $nick $+ 's BattleTag is %bTag $+ $chr(35) $+ %bTagNum on %bTagSvr server.
      }
    }
  }
  elseif ($1 == !d3profile) {
    var %get $+(#,.,$nick)
    var %bTag $readini(btag.ini,%get,bTag)
    var %bTagSvr $readini(btag.ini,%get,bTagSvr)
    var %bTagNum $readini(btag.ini,%get,bTagNum)
    if (!%bTag) { 
      msg # $nick $+ , we have no BattleTag logged for you. Please use the command "!btag add <battletag> <4 dig number> <main server>" to add your tag.
    }
    else {
      msg # $nick $+ 's profile link is http:// $+ %bTagSvr $+ .battle.net/d3/en/profile/ $+ %bTag $+ - $+ %bTagNum $+ /?t
    }
  }
  elseif ($1 == !bacon) {
    if (%floodbacon) { return }
    set -u60 %floodbacon On
    var %get $+(#,.,$nick)
    var %rand $rand(0, 99)
    var %nick $nick($chan,$rand(1,$nick($chan,0)))
    /msg # .me gives %nick %rand pieces of bacon!
  }
  elseif ($1 == !who) {
    if ($0 < 2) { msg # Insufficient parameters: Use !who <twitch name> | return }
    var %get $+(#,.,$2)
    var %bTag $readini(btag.ini,%get,bTag)
    var %bTagSvr $readini(btag.ini,%get,bTagSvr)
    var %bTagNum $readini(btag.ini,%get,bTagNum)
    if ($2 == ninjab0t || $2 == ninjabot) {
      msg # Silly human, I am a bot for this channel. I do not play games. Therefore, it is useless for me to have a BattleTag.
    }
    elseif (!%bTag) { 
      msg # We have no BattleTag recorded for $2
    } 
    else {
      msg # $2 $+ 's BattleTag is %bTag $+ $chr(35) $+ %bTagNum on %bTagSvr
    }
  }
  elseif ($1 == !slap) {
    if (%floodslap) { return }
    set -u60 %floodslap On
    var %rand $nick($chan,$rand(1,$nick($chan,0)))
    /msg # .me NinjSlaps %rand
  }
  elseif ($1 == !strawpoll) {
    if (ismod) {
      if ($0 < 3) { msg # Insufficient parameters: Use !strawpoll <minutes to repeat> <strawpoll num> | return }
      if (%floodstraw) { return }
      set -u60 %floodstraw On
      /msg # Vote for the current poll: http://strawpoll.me/ $+ $3 This message will repeat $2 more times.
      /timer $2 60 .msg # Vote for the current poll: http://strawpoll.me/ $+ $3
    }
  }
  else {
    var %get $+(#,.,$1)
    var %name $1
    var %text $readini(cmds.ini,%get,text)
    if (!%text) {
      /msg # No such command available.
    }
    else {
      if (%flood [ $+ [ %name ] ]) { return }
      set -u30 %flood%name On
      /msg # %text
    }
  }
}
;----------------
;| Mod Commands |
;----------------
on *:text:#*:#: {
  if (ismod) {
    if ($1 == #add) {
      if ($0 < 3) { msg # Insufficient parameters: Use #add !<command name> <text> | return }
      writeini -n cmds.ini $+(#,.,$2) text $3-
      /msg # $2 has been set to $3-
    }
    elseif ($1 == #lock) {
      if ($0 < 2) { msg # Insufficient parameters: Use #lock !<command name> | return }
      writeini -n cmds.ini $+(#,.,$2) lock 1
      /msg # Command $2 has been locked. This is irreversable. Please contact Matt/LTM to have it unlocked.
    }
    elseif ($1 == #edit) {
      if ($0 < 3) { msg # Insufficient parameters: Use #edit !<command name> <text> | return }
      var %lock $readini(cmds.ini,$+(#,.,$2),lock) 
      if (%lock == 1) {
        /msg # Can not edit locked messages.
      }
      else {
        writeini -n cmds.ini $+(#,.,$2) text $3-
        /msg # Edited $2 to $3-
      }
    }
    elseif ($1 == #delete) {
      var %lock $readini(cmds.ini,$+(#,.,$2),lock) 
      if (%lock == 1) {
        /msg # Can not remove locked messages.
      }
      else {
        /remini cmds.ini $+(#,.,$2)
        /msg # Command $2 has been removed.
      }
    }
  }
  else {
    /msg # $nick $+ , you do not have permission to use mod commands.
  }
}

;----------
;| Timers |
;----------
on *:join:#: {
  if ($nick == nlgg_shinobi) { 
    /msg # May the SWAH be with you!
  }
}
on *:part:#: {
  if ($nick == nlgg_shinobi) { 
  }
}

;----------------------------------
;| Remove flashing when JTV talks |
;----------------------------------
alias -l twitch_connect_address return irc.twitch.tv
alias -l twitch_server return tmi.twitch.tv
on ^*:join:*: {
  if ($server == $twitch_server) {
    haltdef
    ;echo -atcns join + $+ $nick has joined the channel.
  }
}
on ^*:part:*: {
  if ($server == $twitch_server) {
    haltdef
    ;echo -atcns part - $+ $nick has left the channel.
  }
}
on ^*:open:?:*:{
  if ($cid == $twitch_connection) && ($nick == jtv) {
    haltdef
    echo -atcns notice $+(-, $nick, -) $1-
  }
}
alias twitch {
  var %name $twitch_name
  var %pass $twitch_pass
  tokenize 32 $lower($iif($1, $1, %name))
  if (!%name) || (!%pass) {
    echo -aec info * /twitch: name or pass missing.
    return
  }
  var %cid $twitch_connection
  if (%cid) && ($scid(%cid).status != connected) scid %cid server $twitch_connect_address 6667 %pass -i %name -j #$1
  elseif (%cid) scid %cid join #$1
  else server -m $twitch_connect_address 6667 %pass -i %name -j #$1
}
alias twitch_reset {
  remini twitch.ini USER_INFO name
  remini twitch.ini USER_INFO pass
  echo -aec info * Twitch name & pass cleared.
}
menu nicklist {
  $iif($cid == $twitch_connection, Twitch)
  .Mod: .msg # .mod $1
  .Demod: .msg # .unmod $1
  .Ban: .msg # .ban $1
  .Unban: .msg # .unban $1
  .Timeout
  ..1sec: .msg # .timeout $1 1
  ..1min: .msg # .timeout $1 60
  ..5min: .msg # .timeout $1 300
  ..10min: .msg # .timeout $1 600
  ..30min: .msg # .timeout $1 1800
  .Go to channel: url -an http://www.twitch.tv/ $+ $$1
}
menu channel {
  $iif($cid == $twitch_connection, Twitch)
  .Slow chat
  ..off: .msg # .slowoff
  ..30sec: .msg # .slow 30
  ..60sec: .msg # .slow 60
  ..120sec: .msg # .slow 120
  .Commercial
  ..30sec: .msg # .commercial 30
  ..60sec: .msg # .commercial 60
  ..90sec: .msg # .commercial 90
  ..120sec: .msg # .commercial 120
  ..150sec: .msg # .commercial 150
  ..180sec: .msg # .commercial 180
  .Subscribers
  ..on: .msg # .subscribers
  ..off: .msg # .subscribersoff
  .Clear chat: .msg # .clear
  .Mod list: .msg # .mods
  .Open stream: url -an http://www.twitch.tv/ $+ $right(#, -1)
}
alias -l twitch_pass {
  var %pass $readini(twitch.ini, n, USER_INFO, pass)
  if (!%pass) {
    var %pass $input(Twitch pass:, p)
    if (%pass) writeini twitch.ini USER_INFO pass %pass 
  }
  return %pass
}
alias -l twitch_name {
  var %name $readini(twitch.ini, n, USER_INFO, name)
  if (!%name) {
    var %name $input(Twitch Username:, e)
    if (%name) writeini twitch.ini USER_INFO name %name
  }
  return %name
}
alias -l statuswindow return $window(status window, 1).sbtext
alias -l twitch_connection {
  /*
  * $twitch_connection
  * returns the $cid of the twitch connection if it's found
  * else returns $false 
  */
  var %c $scon(0)
  while (%c) {
    if ($scon(%c).server == $twitch_server) || ($twitch_connect_address * iswm $scon(%c).statuswindow) return $scon(%c)
    dec %c
  }
  return $false
}
